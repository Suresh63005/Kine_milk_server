name: Deploy Node.js Backend to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4  # Updated to latest version

    - name: Set up Node.js
      uses: actions/setup-node@v4  # Updated to latest version
      with:
        node-version: '20'

    - name: Create Zip of Node Project
      run: zip -r node-backend.zip . -x "node_modules/*" ".env" ".git/*" ".github/*"

    - name: Copy Files to EC2
      uses: appleboy/scp-action@v0.1.7  # Updated to latest version
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        source: node-backend.zip
        target: /home/ubuntu/
        overwrite: true  # Ensure overwrite to avoid conflicts

    - name: SSH and Deploy Node App
      uses: appleboy/ssh-action@v1.0.3  # Updated to latest version
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_KEY }}
        script: |
          # Exit on error
          set -e

          # Install dependencies on EC2 (for fresh instance)
          sudo apt update
          sudo apt install -y unzip curl
          
          # Install Node.js (if not present)
          if ! command -v node &> /dev/null; then
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt install -y nodejs
          fi

          # Install PM2 globally (if not present)
          if ! command -v pm2 &> /dev/null; then
            sudo npm install -g pm2
          fi

          # Unzip into temp folder
          mkdir -p ~/node-app-temp
          unzip -o ~/node-backend.zip -d ~/node-app-temp

          # Handle .env file
          if [ -f ~/node-app/.env ]; then
            cp ~/node-app/.env ~/node-app-temp/.env
          else
            echo "${{ secrets.ENV_FILE }}" > ~/node-app-temp/.env
          fi

          # Stop existing PM2 process (if running)
          pm2 stop server || true
          pm2 delete server || true

          # Replace old app with new version
          rm -rf ~/node-app
          mv ~/node-app-temp ~/node-app

          # Install dependencies
          cd ~/node-app
          npm ci  # Use npm ci for consistent installs

          # Start application
          pm2 start index.js --name "server"

          # Configure PM2 startup (only if not already set)
          if [ ! -f ~/.pm2/dump.pm2 ]; then
            pm2 startup systemd -u ubuntu --hp /home/ubuntu
            pm2 save
          fi

          # Clean up
          rm ~/node-backend.zip